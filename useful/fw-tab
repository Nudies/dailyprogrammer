#!/usr/bin/env python
import argparse
import sys

def fw_tab(slices, reader, writer):
    '''
    Create a list for each row in reader file and join it by tab delimter
    in the writer file.
    '''
    if not writer:
        writer = 'fw_output.txt'
    wf = open(writer, 'w')
    for line in open(reader, 'r'):
        l = []
        for s in slices:
            l.append((line[:int(s)+ 1]).rstrip())
            line = line[int(s)+1:]
        wf.write('\t'.join(l) + '\n')
    wf.close()
    print 'Output file: %s' % writer


def start_end(slices):
    '''
    Take a even number of start and end positions and create
    column sections to use.
    '''
    if len(slices) % 2 != 0:
        print ('Uneven number of arguments.\nDouble check your start and end'
               ' points and try again')
        sys.exit(0)
    even = [s for s in slices if (slices.index(s) + 1) % 2 == 0]
    odd = [s for s in slices if (slices.index(s) + 1) % 2 != 0]
    new_slices = [abs(int(e) - int(s)) for s,e in zip(odd, even)]
    return new_slices


def main():
    parser = argparse.ArgumentParser(description='Convert fix-width files to'
                                     ' tab-delimited.')
    parser.add_argument('-c', '--columns', help='a list of columns by length'
                        '\'12,12,24,8,2\'', type=str)
    parser.add_argument('-s', '--startend', help='a list of columns by start'
                        'and end positions \'1,14,15,45,46,60\'', type=str)
    parser.add_argument('file', help='file to target', type=str)
    parser.add_argument('out', help='output file', nargs='?', type=str)
    args = parser.parse_args()

    if args.startend:
        slices = start_end(args.startend.split(','))
    elif args.columns:
        slices = args.columns.split(',')
    else:
        print 'Missing arguments, try again or run -h for usage.'
        sys.exit(0)

    fw_tab(slices, args.file, args.out)


if __name__ == '__main__':
    main()
